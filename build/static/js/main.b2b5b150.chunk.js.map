{"version":3,"sources":["redux/Constants/constants.js","redux/Actions/actions.js","hoc/index.js","utils/api.js","components/Instruction/index.js","pages/Main/index.js","pages/Result/index.js","components/NumberQuestion/index.js","components/Question/index.js","components/AnswersTypes/Buttons/index.js","components/AnswersTypes/Images/index.js","components/AnswersTypes/Ð¡heckboxes/index.js","components/AnswersTypes/RadioButton/index.js","pages/Questions/index.js","App.js","reportWebVitals.js","redux/Reducers/questionsReducer.js","index.js"],"names":["SET_NUMBER_QUESTION","SET_SCORES","MAX_SCORES","GET_QUESTIONS","CLEAR_STORE","currentQuestionsAC","payload","type","countScoresAC","Layout","props","className","cn","animationClass","children","getData","a","axios","get","then","response","data","Instruction","useState","title","setTitle","text","setText","useEffect","dangerouslySetInnerHTML","__html","Main","dispatch","useDispatch","numberQuestion","useSelector","state","questions","setQuestions","alert","loadData","to","pathname","Button","variant","endIcon","onClick","getQuestionsAC","Result","history","useHistory","amountQuestions","maxScores","countedScores","colorFieldResult","setColorFieldResult","confetti","setConfetti","awesomeResult","Math","floor","goodResult","testAgain","persistor","purge","replace","startIcon","NumberQuestion","currentNumberQuestion","questionsAll","slice","map","item","i","Question","questionText","useRef","question","setQuestion","code","setCode","e","console","log","ref","Buttons","correctAnswer","setCorrectAnswer","answer","trueAnswer","Swal","fire","icon","flush","falseAnswer","Images","imagesAll","setImagesAll","images","filter","correct","img","imageUrl","image","imageWidth","imageHeight","borderImage","backgroundImage","index","src","alt","Checkboxes","answersList","setAnswersList","disableButton","setDisableButton","checkedList","answers","select","id","nextQuestion","correctChecked","incorrectChecked","showRightAnswers","reduce","acc","length","html","FormGroup","FormControlLabel","control","Checkbox","onChange","event","target","checked","push","pop","handleChange","label","disabled","RadioButton","setChecked","value","setValue","FormControl","RadioGroup","name","Radio","Questions","questionType","setQuestionType","setAnimationClass","App","toString","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","persistConfig","key","storage","whiteList","rootReducer","combineReducers","action","stateCopy","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2b5b150.chunk.js","sourcesContent":["export const SET_NUMBER_QUESTION = 'SET_NUMBER_QUESTION'\r\nexport const SET_SCORES = 'SET_SCORES'\r\nexport const MAX_SCORES = 'MAX_SCORES'\r\nexport const GET_QUESTIONS = 'GET_QUESTIONS'\r\nexport const CLEAR_STORE = 'CLEAR_STORE'\r\n","import {SET_NUMBER_QUESTION, SET_SCORES, MAX_SCORES, GET_QUESTIONS, CLEAR_STORE} from '../Constants/constants'\r\n\r\nexport const getQuestionsAC = (payload) => {\r\n  return {type: GET_QUESTIONS, payload}\r\n}\r\nexport const currentQuestionsAC = (payload) => {\r\n  return {type: SET_NUMBER_QUESTION, payload}\r\n}\r\nexport const maxScoresAC = (payload) => {\r\n  return {type: MAX_SCORES, payload}\r\n}\r\nexport const countScoresAC = (payload) => {\r\n  return {type: SET_SCORES, payload}\r\n}\r\nexport const clearStoreAc = () => {\r\n  return {type: CLEAR_STORE}\r\n}\r\n","import './style.scss'\r\nimport cn from 'classnames'\r\n\r\nconst Layout = props => (\r\n\r\n  <div className={cn(\"Layout\", {\r\n    \"left\": props.animationClass === 'left',\r\n    \"right\": props.animationClass === 'right',\r\n    \"top\": props.animationClass === 'top',\r\n    \"bottom\": props.animationClass === 'bottom',\r\n  })}>\r\n    {props.children}\r\n  </div>\r\n\r\n)\r\n\r\nexport default Layout\r\n","import axios from 'axios'\r\n\r\nexport const getData = async () => await axios.get('http://localhost:3001/questions').then(response => response.data)\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {getData} from '../../utils/api'\r\nimport '../../assets/css/style.scss'\r\n\r\nconst Instruction = () => {\r\n  const [title, setTitle] = useState([])\r\n  const [text, setText] = useState([])\r\n\r\n  useEffect(() => {\r\n    getData().then(data => {\r\n      setTitle(data[0].title)\r\n      setText(data[0].text)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"answer__instruction-title\" dangerouslySetInnerHTML={{__html: title}}/>\r\n      <div className=\"answer__instruction-text\" dangerouslySetInnerHTML={{__html: text}}/>\r\n    </>\r\n  )\r\n}\r\nexport default Instruction\r\n","import {Link} from 'react-router-dom'\r\nimport {currentQuestionsAC, maxScoresAC, getQuestionsAC} from '../../redux/Actions/actions'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Layout from '../../hoc'\r\nimport Instruction from '../../components/Instruction'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {getData} from '../../utils/api'\r\nimport ReadMore from '@mui/icons-material/ReadMore'\r\nimport Button from '@mui/material/Button'\r\nimport '../../assets/css/style.scss'\r\n\r\nconst Main = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const numberQuestion = useSelector(state => state.questions.numberQuestion)\r\n  const [questions, setQuestions] = useState(null)\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      try {\r\n        await getData().then(data => {\r\n          setQuestions(data)\r\n        })\r\n      } catch (e) {\r\n        alert('ÐÑÐ¸Ð±ÐºÐ° Ð¿Ð¾Ð´ÐºÐ»ÑÑÐµÐ½Ð¸Ñ')\r\n      }\r\n    }\r\n    loadData();\r\n  }, [numberQuestion]);\r\n\r\n  const setNumberQuestion = () => {\r\n    dispatch(maxScoresAC(questions))\r\n    dispatch(currentQuestionsAC(numberQuestion))\r\n    dispatch(getQuestionsAC(questions))\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Instruction/>\r\n      <div className=\"answer__button-block\">\r\n        <Link to={{\r\n          pathname: 'question/' + (numberQuestion + 1)\r\n        }}>\r\n          <Button\r\n            className=\"answer__button-next\"\r\n            variant=\"outlined\"\r\n            endIcon={<ReadMore />}\r\n            onClick={setNumberQuestion}\r\n          >\r\n            ÐÐ°ÑÐ°ÑÑ ÑÐµÑÑ\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\nexport default Main\r\n","import React, {useEffect, useState} from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Layout from '../../hoc/index'\r\nimport {clearStoreAc} from '../../redux/Actions/actions'\r\nimport {persistor} from '../../index'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Confetti from 'react-confetti'\r\nimport ReadMore from '@mui/icons-material/ReadMore'\r\nimport Button from '@mui/material/Button'\r\nimport '../../assets/css/style.scss'\r\n\r\nconst Result = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const state = useSelector(state => state.questions)\r\n  const amountQuestions = state.maxScores\r\n  const countedScores = state.countedScores\r\n  const [colorFieldResult, setColorFieldResult] = useState(null)\r\n  const [title, setTitle] = useState(null)\r\n  const [confetti, setConfetti] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const awesomeResult = Math.floor(amountQuestions * 0.75)\r\n    const goodResult = Math.floor(amountQuestions * 0.5)\r\n\r\n    if (countedScores > awesomeResult) {\r\n      setColorFieldResult('answer__scoreAwesome green')\r\n      setTitle('ÐÑÐµÐ²Ð¾ÑÑÐ¾Ð´Ð½ÑÐ¹ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ!')\r\n      setConfetti(true)\r\n    } else if (countedScores > goodResult) {\r\n      setColorFieldResult('answer__scoreAwesome yellow')\r\n      setTitle('Ð¥Ð¾ÑÐ¾ÑÐ¸Ð¹ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ!')\r\n    } else if (countedScores <= goodResult) {\r\n      setColorFieldResult('answer__scoreAwesome red')\r\n      setTitle(`ÐÐ»Ð¾ÑÐ¾Ð¹ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ!`\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  const testAgain = async () => {\r\n    dispatch(clearStoreAc())\r\n    await persistor.purge()\r\n    await history.replace('/')\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"answer__final\">\r\n        <div className=\"answer__titleFinal\">{title}</div>\r\n        <div className={colorFieldResult}>\r\n          {countedScores}\r\n        </div>\r\n        <div className=\"answer__textFinal\">\r\n          ÐÑ Ð½Ð°Ð±ÑÐ°Ð»Ð¸ {countedScores} Ð±Ð°Ð»Ð»Ð°(Ð¾Ð²) Ð¸Ð· {amountQuestions} Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½ÑÑ\r\n        </div>\r\n      </div>\r\n      <div className=\"answer__button-block\">\r\n        <Button\r\n          className=\"answer__button-end\"\r\n          variant=\"outlined\"\r\n          startIcon={<ReadMore/>}\r\n          onClick={testAgain}\r\n        >\r\n          ÐÑÐ¾Ð¹ÑÐ¸ ÑÐµÑÑ Ð·Ð°Ð½Ð¾Ð²Ð¾\r\n        </Button>\r\n      </div>\r\n      {\r\n        confetti\r\n          ? <Confetti/>\r\n          : false\r\n      }\r\n    </Layout>\r\n  )\r\n}\r\nexport default Result\r\n","import {useSelector} from 'react-redux'\r\nimport '../../assets/css/style.scss'\r\nimport cn from 'classnames'\r\n\r\nconst NumberQuestion = () => {\r\n  const state = useSelector(state => state.questions)\r\n  const currentNumberQuestion = state.numberQuestion\r\n  const questionsAll = state.questionsAll.slice(1)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"answer__scale\">\r\n      {\r\n        questionsAll.map((item, i) => <span key={i} className={cn(\"answer__scale-item\", {\r\n          \"active\": currentNumberQuestion === i + 1\r\n        })}>{i + 1}</span>)\r\n      }\r\n      </div>\r\n      <div className=\"answer__numberQuestion\">\r\n        ÐÐ¾Ð¿ÑÐ¾Ñ â{currentNumberQuestion}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default NumberQuestion\r\n\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {getData} from '../../utils/api'\r\nimport '../../assets/css/style.scss'\r\n\r\nconst Question = () => {\r\n\r\n  const questionText = useRef()\r\n  const numberQuestion = useSelector(state => state.questions.numberQuestion)\r\n  const [question, setQuestion] = useState(null)\r\n  const [code, setCode] = useState(null)\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      try {\r\n        getData().then(data => {\r\n          setQuestion(data[numberQuestion].question)\r\n          setCode(data[numberQuestion].code)\r\n        })\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    loadData();\r\n  }, [numberQuestion]);\r\n\r\n  return (\r\n    <div ref={questionText} className=\"question\">\r\n      <div className=\"question__text\" dangerouslySetInnerHTML={{__html: question}}/>\r\n      {\r\n        code\r\n          ? <pre className=\"question__code-block\"><code className=\"question__code\" dangerouslySetInnerHTML={{__html: code}}/></pre>\r\n          : false\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default Question\r\n","import {useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {currentQuestionsAC, countScoresAC} from '../../../redux/Actions/actions'\r\nimport React, {useEffect, useState} from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport {persistor} from '../../../index'\r\nimport Button from '@mui/material/Button'\r\nimport '../../../assets/css/style.scss'\r\n\r\nconst Buttons = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(state => state.questions)\r\n  const numberQuestion = state.numberQuestion\r\n  const amountQuestions = state.maxScores\r\n  const questionsAll = state.questionsAll\r\n  const [correctAnswer, setCorrectAnswer] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setCorrectAnswer(questionsAll[numberQuestion].answer)\r\n  }, [numberQuestion]);\r\n\r\n  const trueAnswer = async () => {\r\n    if (correctAnswer) {\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'ÐÑÐ»Ð¸ÑÐ½Ð¾!</br> ÐÑÐ°Ð²Ð¸Ð»ÑÐ½ÑÐ¹ Ð¾ÑÐ²ÐµÑ'\r\n      })\r\n      dispatch(countScoresAC(true))\r\n    } else {\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'ÐÑÐ¸Ð±ÐºÐ°'\r\n      })\r\n    }\r\n    dispatch(currentQuestionsAC(numberQuestion))\r\n\r\n    if (numberQuestion < amountQuestions) {\r\n      history.replace('question/' + (numberQuestion + 1))\r\n    } else {\r\n      history.replace('/result')\r\n      await persistor.flush()\r\n    }\r\n  }\r\n  const falseAnswer = async () => {\r\n    if (!correctAnswer) {\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'ÐÑÐ»Ð¸ÑÐ½Ð¾!</br> ÐÑÐ°Ð²Ð¸Ð»ÑÐ½ÑÐ¹ Ð¾ÑÐ²ÐµÑ'\r\n      })\r\n      dispatch(countScoresAC(true))\r\n    } else {\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'ÐÑÐ¸Ð±ÐºÐ°'\r\n      })\r\n      dispatch(countScoresAC(false))\r\n    }\r\n    dispatch(currentQuestionsAC(numberQuestion))\r\n    if (numberQuestion < amountQuestions) {\r\n      history.replace('question/' + (numberQuestion + 1))\r\n    } else {\r\n      history.replace('/result')\r\n      await persistor.flush()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"answer__buttons\">\r\n      <Button\r\n        className=\"answer__button-next\"\r\n        variant=\"outlined\"\r\n        onClick={trueAnswer}\r\n      >\r\n        ÐÐ°\r\n      </Button>\r\n      <Button\r\n        className=\"answer__button-next\"\r\n        variant=\"outlined\"\r\n        onClick={falseAnswer}\r\n      >\r\n        ÐÐµÑ\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\nexport default Buttons\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {countScoresAC, currentQuestionsAC} from '../../../redux/Actions/actions'\r\nimport Swal from 'sweetalert2'\r\nimport {persistor} from '../../../index'\r\nimport '../../../assets/css/style.scss'\r\n\r\nconst Images = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(state => state.questions)\r\n  const questionsAll = state.questionsAll\r\n  const numberQuestion = state.numberQuestion\r\n  const amountQuestions = state.maxScores\r\n  const [imagesAll, setImagesAll] = useState([])\r\n  const [correctAnswer, setCorrectAnswer] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setImagesAll(questionsAll[numberQuestion].images)\r\n    setCorrectAnswer(questionsAll[numberQuestion].images.filter(item => item.correct === true))\r\n  }, [numberQuestion]);\r\n\r\n  const trueAnswer = async (img) => {\r\n    if (img.correct) {\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'ÐÑÐ»Ð¸ÑÐ½Ð¾!</br> ÐÑÐ°Ð²Ð¸Ð»ÑÐ½ÑÐ¹ Ð¾ÑÐ²ÐµÑ'\r\n      })\r\n      dispatch(countScoresAC(true))\r\n    } else {\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'ÐÑÐ°Ð²Ð¸Ð»ÑÐ½ÑÐ¹ Ð¾ÑÐ²ÐµÑ',\r\n        imageUrl: correctAnswer[0].image,\r\n        imageWidth: 'auto',\r\n        imageHeight: 150,\r\n        borderImage: '1px solid #cdcdcd',\r\n        backgroundImage: '#cdcdcd'\r\n      })\r\n    }\r\n    dispatch(currentQuestionsAC(numberQuestion))\r\n    if (numberQuestion < amountQuestions) {\r\n      history.replace('question/' + (numberQuestion + 1))\r\n    } else {\r\n      history.replace('/result')\r\n      await persistor.flush()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"answer__img\">\r\n      {\r\n        imagesAll?.map((img, index) => (\r\n          <div key={index} className=\"answer__imgBlock\" onClick={() => trueAnswer(img)}>\r\n            <img src={img.image} alt=\"img\"/>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default Images\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nimport {countScoresAC, currentQuestionsAC} from '../../../redux/Actions/actions'\r\nimport {persistor} from '../../../index'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport FormGroup from '@mui/material/FormGroup'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport ReadMore from '@mui/icons-material/ReadMore'\r\nimport Button from '@mui/material/Button'\r\nimport '../../../assets/css/style.scss'\r\n\r\nconst Checkboxes = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(state => state.questions)\r\n  const numberQuestion = state.numberQuestion\r\n  const amountQuestions = state.maxScores\r\n  const questionsAll = state.questionsAll\r\n  const [answersList, setAnswersList] = useState([])\r\n  const [correctAnswer, setCorrectAnswer] = useState(null)\r\n  const [disableButton, setDisableButton] = useState(true)\r\n  const [checkedList, setCheckedList] = useState([])\r\n\r\n  useEffect(() => {\r\n\r\n    setAnswersList(\r\n      questionsAll[numberQuestion].answers.map((item, index) => {\r\n        return {\r\n          select: false,\r\n          id: index,\r\n          text: item.text,\r\n          correct: item.correct,\r\n        };\r\n      })\r\n    )\r\n    setCorrectAnswer(questionsAll[numberQuestion].answers.filter(item => item.correct === true))\r\n  }, [numberQuestion])\r\n\r\n  const nextQuestion = async () => {\r\n    const correctChecked = answersList.filter(item => item.select === true && item.correct === true)\r\n    const incorrectChecked = answersList.filter(item => item.select === true && item.correct === false)\r\n\r\n    const showRightAnswers = () => {\r\n      return correctAnswer.reduce((acc, item) => {\r\n        return acc + `<li>${item.text}</li>`\r\n      }, '')\r\n    }\r\n    if (correctChecked.length <= answersList.length && incorrectChecked.length === 0 && correctChecked.length !== 0) {\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'ÐÑÐ»Ð¸ÑÐ½Ð¾!</br> ÐÑÐ°Ð²Ð¸Ð»ÑÐ½ÑÐ¹ Ð¾ÑÐ²ÐµÑ'\r\n      })\r\n      dispatch(countScoresAC(true))\r\n    } else {\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'ÐÑÐ¸Ð±ÐºÐ°',\r\n        html:\r\n          `<div class=\"answer__rightAnswersBlock\">\r\n            <p class=\"answer__rightAnswersTitle\">ÐÑÐ°Ð²Ð¸Ð»ÑÐ½ÑÐµ Ð¾ÑÐ²ÐµÑÑ:</p>\r\n            <ol class=\"answer__rightAnswersList\">\r\n              ${showRightAnswers()}\r\n            </ol>\r\n          </div>`\r\n      })\r\n    }\r\n    dispatch(currentQuestionsAC(numberQuestion))\r\n    if (numberQuestion < amountQuestions) {\r\n      history.replace('question/' + (numberQuestion + 1))\r\n    } else {\r\n      history.replace('/result')\r\n      await persistor.flush()\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, id) => {\r\n    setAnswersList(\r\n      answersList.map(data => {\r\n        if (id === data.id) {\r\n          data.select = event.target.checked;\r\n        }\r\n        return data;\r\n      })\r\n    );\r\n    if (event.target.checked) {\r\n      checkedList.push(event.target.checked)\r\n    } else {\r\n      checkedList.pop()\r\n    }\r\n    setDisableButton(!checkedList.length)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"answer__blockChecked\">\r\n        {\r\n          answersList?.map((item, index) => (\r\n            <FormGroup key={item.id}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    onChange={(event) => handleChange(event, item.id)}\r\n                  />\r\n                }\r\n                label={item.text}\r\n              />\r\n            </FormGroup>\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      <div className=\"answer__button-block\">\r\n        <Button\r\n          className=\"answer__button-next\"\r\n          variant=\"outlined\"\r\n          startIcon={<ReadMore/>}\r\n          onClick={nextQuestion}\r\n          disabled={disableButton}\r\n        >\r\n          ÐÐ°Ð»ÐµÐµ\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default Checkboxes\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {countScoresAC, currentQuestionsAC} from '../../../redux/Actions/actions'\r\nimport Swal from 'sweetalert2'\r\nimport {persistor} from '../../../index'\r\nimport Radio from '@mui/material/Radio'\r\nimport RadioGroup from '@mui/material/RadioGroup'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport ReadMore from '@mui/icons-material/ReadMore'\r\nimport Button from '@mui/material/Button'\r\nimport '../../../assets/css/style.scss'\r\n\r\n\r\nconst RadioButton = () => {\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(state => state.questions)\r\n  const numberQuestion = state.numberQuestion\r\n  const amountQuestions = state.maxScores\r\n  const questionsAll = state.questionsAll\r\n  const answersList = questionsAll[numberQuestion].answers\r\n  const [checked, setChecked] = useState(null)\r\n  const [correctAnswer, setCorrectAnswer] = useState(null)\r\n  const [disableButton, setDisableButton] = useState(true)\r\n  const [value, setValue] = useState('female');\r\n\r\n  useEffect(() => {\r\n    setCorrectAnswer(questionsAll[numberQuestion].answers.filter(item => item.correct === true))\r\n  }, [numberQuestion])\r\n\r\n  const nextQuestion = async () => {\r\n    if (checked?.correct) {\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'ÐÑÐ»Ð¸ÑÐ½Ð¾!</br> ÐÑÐ°Ð²Ð¸Ð»ÑÐ½ÑÐ¹ Ð¾ÑÐ²ÐµÑ'\r\n      })\r\n      dispatch(countScoresAC(true))\r\n    } else {\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'ÐÑÐ¸Ð±ÐºÐ°',\r\n        text: 'ÐÑÐ°Ð²Ð¸Ð»ÑÐ½ÑÐ¹ Ð¾ÑÐ²ÐµÑ - ' + correctAnswer[0].text\r\n      })\r\n    }\r\n    dispatch(currentQuestionsAC(numberQuestion))\r\n    if (numberQuestion < amountQuestions) {\r\n      history.replace('question/' + (numberQuestion + 1))\r\n    } else {\r\n      history.replace('/result')\r\n      await persistor.flush()\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, item) => {\r\n    setValue(event.target.value);\r\n    setChecked(item)\r\n    setDisableButton(false)\r\n  };\r\n\r\n  return (\r\n    <div className=\"answer__block\">\r\n      <div className=\"answer__blockChecked\">\r\n        {\r\n          answersList?.map(item => (\r\n            <FormControl key={item.id}>\r\n              <RadioGroup\r\n                aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                name=\"controlled-radio-buttons-group\"\r\n                value={value}\r\n                onChange={(event) => handleChange(event, item)}\r\n              >\r\n                <FormControlLabel\r\n                  value={item.text}\r\n                  control={\r\n                    <Radio />}\r\n                  label={item.text} />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          ))\r\n        }\r\n      </div>\r\n      <div className=\"answer__button-block\">\r\n        <Button\r\n          className=\"answer__button-next\"\r\n          variant=\"outlined\"\r\n          startIcon={<ReadMore/>}\r\n          onClick={nextQuestion}\r\n          disabled={disableButton}\r\n        >\r\n          ÐÐ°Ð»ÐµÐµ\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default RadioButton\r\n","import Layout from '../../hoc/index'\r\nimport NumberQuestion from '../../components/NumberQuestion'\r\nimport Question from '../../components/Question'\r\nimport Buttons from '../../components/AnswersTypes/Buttons'\r\nimport Images from '../../components/AnswersTypes/Images'\r\nimport Checkboxes from '../../components/AnswersTypes/Ð¡heckboxes'\r\nimport RadioButton from '../../components/AnswersTypes/RadioButton'\r\nimport {useEffect, useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {getData} from '../../utils/api'\r\n\r\nconst Questions = () => {\r\n\r\n  const state = useSelector(state => state)\r\n  const numberQuestion = state.questions.numberQuestion\r\n  const [questionType, setQuestionType] = useState(null)\r\n  const [animationClass, setAnimationClass] = useState(null)\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      try {\r\n        getData().then(data => {\r\n          const type = data[numberQuestion].type\r\n          setQuestionType(type)\r\n          if (type === 'buttonsType') {\r\n            setAnimationClass( 'bottom')\r\n          } else if (type === 'multipleOptionsType') {\r\n            setAnimationClass( 'top')\r\n          } else if (type === 'oneOptionsType') {\r\n            setAnimationClass( 'left')\r\n          } else if (type === 'imagesType') {\r\n            setAnimationClass( 'right')\r\n          }\r\n        })\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    loadData();\r\n  }, [numberQuestion])\r\n\r\n\r\n  const question = (type) => {\r\n    if (type === 'buttonsType') {\r\n      return <Buttons/>\r\n    } else if (type === 'multipleOptionsType') {\r\n      return <Checkboxes/>\r\n    } else if (type === 'oneOptionsType') {\r\n      return <RadioButton/>\r\n    } else if (type === 'imagesType') {\r\n      return <Images/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout animationClass={animationClass}>\r\n      <NumberQuestion/>\r\n      <Question/>\r\n      {question(questionType)}\r\n    </Layout>\r\n  )\r\n}\r\nexport default Questions\r\n","import {Route, Switch, Redirect} from 'react-router-dom'\r\nimport Main from './pages/Main/index'\r\nimport Result from './pages/Result'\r\nimport Questions from './pages/Questions'\r\nimport {useSelector} from 'react-redux'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n\r\n    const state = useSelector(state => state)\r\n    const currentNumberQuestion = state.questions.numberQuestion\r\n    const numberQuestion = \"/question/\" + currentNumberQuestion.toString()\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Main}/>\r\n                <Route path={numberQuestion} exact component={Questions}/>\r\n                <Route path=\"/result\" exact component={Result}/>\r\n                <Redirect to=\"/404\"/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {SET_NUMBER_QUESTION, SET_SCORES, MAX_SCORES, GET_QUESTIONS, CLEAR_STORE} from '../Constants/constants'\r\n\r\nconst initialState = {\r\n  numberQuestion: 0,\r\n  maxScores: 0,\r\n  countedScores: 0,\r\n  questionsAll: null\r\n}\r\n\r\nexport default function questionsReducer(state = initialState, action) {\r\n\r\n  let stateCopy = {...state}\r\n\r\n  switch (action.type) {\r\n\r\n    case GET_QUESTIONS: {\r\n      stateCopy.questionsAll = action.payload\r\n      return stateCopy\r\n    }\r\n    case SET_NUMBER_QUESTION: {\r\n      stateCopy.numberQuestion = action.payload + 1\r\n      return stateCopy\r\n    }\r\n    case MAX_SCORES: {\r\n      stateCopy.maxScores = action.payload.length - 1\r\n      return stateCopy\r\n    }\r\n    case SET_SCORES: {\r\n      if (action.payload) {\r\n        stateCopy.countedScores = stateCopy.countedScores += 1\r\n      } else {\r\n        stateCopy.countedScores = stateCopy.countedScores -= 0\r\n      }\r\n      return stateCopy\r\n    }\r\n    case CLEAR_STORE: {\r\n      stateCopy.numberQuestion = 0\r\n      stateCopy.maxScores = 0\r\n      stateCopy.countedScores = 0\r\n      stateCopy.questionsAll = null\r\n      return stateCopy\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport {combineReducers, createStore, applyMiddleware} from 'redux'\r\nimport questionsReducer from './redux/Reducers/questionsReducer'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {PersistGate} from 'redux-persist/integration/react'\r\nimport './index.css'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whiteList: ['questions']\r\n}\r\n\r\nlet rootReducer = combineReducers({\r\n  questions: questionsReducer,\r\n})\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nexport let store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)))\r\nexport let persistor = persistStore(store)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <PersistGate persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n\r\n  document.getElementById('root')\r\n)\r\nreportWebVitals();\r\n"],"sourceRoot":""}